residual: &residual false
autoencoder:
  # pretrained_ckpt_path: 'experiment/distill_ori_new_casual_mask/AE-distill_MAR_VAE-2k'
  # binary_dim: &binary_dim 16
  # vae_dim: &vae_dim 16
  # num_latents: &num_latents 256
  # matryoshka: false
  # encoder:
  #   vae_dim: *vae_dim
  #   embed_dim: 512
  #   num_layers: 8
  #   num_latents: *num_latents
  #   num_heads: 8
  #   output_dim: *binary_dim

  # decoder:
  #   residual: *residual
  #   binary_mode: true
  #   vae_dim: *vae_dim
  #   embed_dim: 512
  #   num_layers: 8
  #   num_latents: *num_latents
  #   num_heads: 8
  #   input_dim: *binary_dim
  #   recon_levels: [1, 2, 3, 4, 5, 6, 8, 10, 13, 16] # the same as VAR
  
  # decoder_matryoshka:
  #   binary_mode: true
  #   vae_dim: *vae_dim
  #   embed_dim: 512
  #   num_layers: 8
  #   num_latents: *num_latents
  #   num_heads: 8
  #   input_dim: *binary_dim

  pretrained_ckpt_path: 'experiment/matryoshka_casual_latents_incre/AE-distill_MAR_VAE-5k'
  binary_dim: &binary_dim 16
  vae_dim: &vae_dim 16
  num_latents: &num_latents 512
  matryoshka: true
  encoder:
    vae_dim: *vae_dim
    embed_dim: 512
    num_layers: 8
    num_latents: *num_latents
    num_heads: 8
    output_dim: *binary_dim
  
  decoder_matryoshka:
    binary_mode: true
    vae_dim: *vae_dim
    embed_dim: 512
    num_layers: 8
    num_latents: *num_latents
    num_heads: 8
    input_dim: *binary_dim
    latents_mask_schedule: 'linear'

gpt:
  dim: 1024
  n_layer: 16
  n_head: 16
  n_kv_head:
  multiple_of: 256
  ffn_dim_multiplier:
  rope_base: 10000
  norm_eps: 1e-5
  initializer_range: 0.02
  
  token_dropout_p: 0.1
  attn_dropout_p: 0.0
  resid_dropout_p: 0.1
  ffn_dropout_p: 0.1
  drop_path_rate: 0.0

  num_classes: 1000
  caption_dim: 2048
  class_dropout_prob: 0.1
  model_type: 'c2i'

  vocab_size: 16384
  cls_token_num: 1
  block_size: 256
  max_batch_size: 32
  max_seq_len: 2048

  input_dim: 16
  recon_levels: [1, 2, 3, 4, 5, 6, 8, 10, 13, 16] # the same as VAR

train:
  num_pred_bits:
  resume_path:
  skipped_keys:
  global_step: 
  exp_name: &exp_name 'gpt_newtok'
  wandb_proj: *exp_name
  # output_dir: *exp_name
  output_dir: 'gpt_causal_latents_incre/full_imagenet'
  logging_dir: 'logs'
  mixed_precision: 'bf16'
  gradient_accumulation_steps: 2
  report_to: 'wandb'
  num_iters: 20000
  save_every: 5000

data:
  path: '/data/Largedata/ImageNet_wds/imagenet-train-{000000..001281}.tar'
  batch_size: 25 # to modify

